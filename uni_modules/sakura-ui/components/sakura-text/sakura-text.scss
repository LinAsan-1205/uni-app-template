@use "sass:map";
@use "../../libs/styles/design" as *;
$text: () !default;
$text: map.merge(
	(
		color: get-css-var('color-text-base'),
		size-xs: get-css-var($fontSizeXs),
		size-sm: get-css-var($fontSizeSm),
		size-md: get-css-var($fontSizeMd),
		size-lg: get-css-var($fontSizeLg)
	),
	$text
);
$textSize: 'text-size-' !default;
$size: sx, sm, md, lg !default;
.#{$namespace}-text {
	color: get-css-var('text-color');
	font-size: get-css-var('text-size-md');
	&--var {
		@include define-preset-values('text', $text);
	}

	@mixin define-text-style($style-map) {
		@include define-preset-style('text', $style-map);
	}

	@each $type in $types {
		&--#{$type} {
			@include define-text-style(
				(
					color: 'color' $type 'base'
				)
			);
		}
	}
	@for $i from 1 through 10 {
		&--line--#{$i} {
			display: -webkit-box !important;
			overflow: hidden;
			text-overflow: ellipsis;
			word-break: break-all;
			-webkit-line-clamp: $i;
			-webkit-box-orient: vertical !important;
		}
	}

	display: inline-block;

	@each $name in $size {
		&--#{$name} {
			font-size: get-css-var($textSize + #{$name});
		}
	}

	&--block {
		width: 100%;
		display: block;
	}
}
